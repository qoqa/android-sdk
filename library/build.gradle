apply plugin: 'com.android.library'
apply plugin: 'de.mobilej.unmock'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions "androidx"
    productFlavors{
        library_androidx
        library
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'pl.pragmatists:JUnitParams:1.0.5'

    api 'com.squareup.okhttp3:okhttp:3.3.1'
    library_androidxApi 'androidx.appcompat:appcompat:1.2.0'
    library_androidxApi 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    //noinspection GradleCompatible
    libraryImplementation 'com.android.support:appcompat-v7:28.0.0'
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'

group = groupId                               // Maven Group ID for the artifact

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

unMock {
    keepStartingWith "android.net.Uri"
    keepAndRename "java.nio.charset.Charsets" to "xjava.nio.charset.Charsets"
    keepStartingWith "libcore."
}

apply from: '../publish.gradle' // Makes this library publishable